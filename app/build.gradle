apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.searchbooks"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Java8でコンパイル
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    // Navigation
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"

    // Material Design
    implementation "com.google.android.material:material:$materialVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Twitter
    implementation "org.twitter4j:twitter4j-core:$twitter4jVersion"

    // moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation("com.squareup.moshi:moshi-kotlin:$moshiVersion") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    // glide for images
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.android.support:multidex:$multidexVersion"

    // hamcrest
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    androidTestImplementation "androidx.test:runner:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test:monitor:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestCoreVersion"

    debugImplementation("androidx.fragment:fragment-testing:$androidXFragmentTestVersion") {
        exclude group: 'androidx.test', module: 'core'
    }

    // Coroutines testting
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"

    // Faker
    implementation "com.github.javafaker:javafaker:$fakerVersion"
    testImplementation "com.github.javafaker:javafaker:$fakerVersion"
    androidTestImplementation "com.github.javafaker:javafaker:$fakerVersion"

    // mockk
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"

    // espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
}
